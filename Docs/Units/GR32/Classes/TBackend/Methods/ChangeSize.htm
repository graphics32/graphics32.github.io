<html>
<head>
  <title>ChangeSize</title><script type="text/javascript" src="../../../../../../CodeScripts/SyntaxHighlighter/scripts/shCore.js"></script><script type="text/javascript" src="../../../../../../CodeScripts/SyntaxHighlighter/scripts/shBrushDelphi.js"></script><script type="text/javascript" src="../../../../../../CodeScripts/SyntaxHighlighter/scripts/shBrushCpp.js"></script><script type="text/javascript" src="../../../../../../CodeScripts/SyntaxHighlighter/scripts/shBrushCSharp.js"></script><link rel="stylesheet" type="text/css" href="../../../../../../Styles/default.css"/><link rel="stylesheet" type="text/css" href="../../../../../../Menu/menu.css"/><link rel="stylesheet" type="text/css" href="../../../../../../CodeScripts/SyntaxHighlighter/styles/shCoreDefault.css"/><link rel="stylesheet" type="text/css" href="../../../../../../CodeScripts/SyntaxHighlighter/styles/shThemeDefault.css"/><meta name="viewport" content="width=device-width, initial-scale=1.0"><script type="text/javascript" src="../../../../../../Menu/menu.js"></script><script type="text/javascript" src="../../../../../../CodeScripts/bootstrap.js"></script>
</head>
<body bgcolor="#FFFFFF">
  <div class="menu" id="menu"><a class="ancestor" href="../../../../../_Body.htm">Index</a><a class="ancestor" href="../../../_Body.htm">GR32</a><a class="ancestor" href="../_Body.htm">TBackend</a><span class="active">ChangeSize</span>
  </div><br><br>

  <h1>TBackend.ChangeSize</h1>
  <p class="Decl"><strong>procedure </strong>ChangeSize(var Width, Height: Integer; NewWidth, NewHeight: Integer; ClearBuffer: Boolean = True);<strong> virtual; abstract;</strong></p>
  <h2>Description</h2>
  <p class="Body"><strong>ChangeSize</strong> shall initialize the surface with the dimensions of <strong>NewWidth</strong> x <strong>NewHeight</strong> both measured in pixels. Each pixel has to be 4 byte (ARGB) in size. The allocated memory has to be contiguous with the stride being the length of <strong>NewWidth</strong>. GR32 currently does not support stride lengths different from the width of the new surface. The pointer to the allocated memory has to be written to the protected member <strong>FBits</strong>. <br> The <strong>ClearBuffer</strong> parameter determines whether clearing the buffer is required or not. </p>
  <p class="Body">Before tearing down the old surface <strong>ChangeSize</strong> needs to call the <a href="Changing.htm">Changing</a> method to indicate the destructive change. Finally it has to call <a href="../../TNotifiablePersistent/Methods/Changed.htm">Changed</a>.</p>
  <p class="Body"><strong>Width</strong> and <strong>Height</strong> shall contain the dimension of the new surface that was actually allocated. If the surface could not be allocated both parameter have to be zero.</p>
  <p class="Body"><strong>New back-end classes need to implement this method to do their internal allocation of memory for the surface.</strong></p>
  <p class="Body">&nbsp;</p>
  <h2 id="Auto-SeeAlso">See Also</h2>
  <p class="Body"><a href="Changing.htm">Changing</a>, <a href="FinalizeSurface.htm">FinalizeSurface</a>, <a href="InitializeSurface.htm">InitializeSurface</a>, <a href="../../TNotifiablePersistent/Methods/Changed.htm">TNotifiablePersistent.Changed</a></p>
  <p class="Copyright" id="auto"> <br><br> Copyright &copy;2000-2024 Alex Denisov and the Graphics32 Team &nbsp; - &nbsp; Graphics32 2.0 &nbsp; - &nbsp; Help file built on 18 Feb 2024 <br><br> </p>

</body>
</html>