<html>

<head>
    
  <script type="text/javascript" src="../../../../Scripts/SyntaxHighlighter/scripts/shCore.js">
  </script>
    
  <script type="text/javascript" src="../../../../Scripts/SyntaxHighlighter/scripts/shBrushDelphi.js">
  </script>
    
  <link type="text/css" rel="stylesheet" href="../../../../Scripts/SyntaxHighlighter/styles/shCore.css">
    
  <link type="text/css" rel="stylesheet" href="../../../../Scripts/SyntaxHighlighter/styles/shThemeDefault.css">
  

  <title>TStretchFilter</title>

  <link rel="stylesheet" href="../../../../Styles/Default.css">

    
  <script type="text/javascript" src="../../../../Scripts/bootstrap.js">
  </script>
  
</head>


<body bgcolor="#FFFFFF">
    
  <!-- THIS FILE HAS BEEN AUTOMATICALLY PROCESSED FROM A SOURCE COPY -->
    
  <!-- DO NOT EDIT MANUALLY !!! -->
  
  <table class="Banner" cellspacing="0" cellpadding="0" border="1" bordercolorlight="#303080" bordercolordark="#7070B0">
    <tr>
      <td class="Banner" nowrap=""><a href="../../../_Body.htm" class="Banner"><img src="../../../../Images/_Home.gif" align="absmiddle">Home</a>
      </td>
      <td class="Banner" nowrap=""><a href="../_Body.htm" class="Banner"><img src="../../../../Images/_Unit.gif" align="absmiddle">GR32</a>
      </td>
      <td class="Banner" width="100%" align="right"><img src="../../../../Images/_Project_Logo.gif" align="absmiddle">
      </td>
    </tr>
  </table>
  <h1>TStretchFilter</h1>

  <p class="Decl"><b>type</b> TStretchFilter = (sfNearest, sfDraft, sfLinear, sfCosine, sfSpline, sfLanczos, sfMitchell);</p>

  <h2>Description</h2>

  <p class="Body">When the bitmap is scaled, these filters control how the colors are interpolated:</p>

  <ul>
  
    <li>sfNearest is the fastest filter, although the quality of the stretched image is fair.</li>
  
    <li>sfDraft is a complex resampler, meaning that it uses several different methods. For downsampling it uses row-column zoneshifting to preserve more details than sfNearest, however the quality is not as good as sfLinear. For upsampling it uses a linear interpolation method that may compromise details - this happens if both downsampling and upsampling is needed. sfDraft is ideal for preview fields and thumbnails. Please note, that the algorithm is not pixel-perfect, that why using a custom cliprect might result in a so called jitter-effect. </li>
  
    <li>sfLinear is several times slower, but it produces more decent results in most cases.</li>
  
    <li>sfCosine is almost equally fast as sfLinear, but it uses cosine interpolation, which produces a sharper image.</li>
  
    <li>sfSpline is an approximation of spline interpolation, for some applications its result may be too smooth and blurry, but when using with large magnification factors, it usually yields better image compared to sfLinear.</li>
  
    <li>sfLanczos generally produces the sharpest image (especially when downsampling), however sometimes can produce excessive &quot;ringing&quot; effect - this is the slowest filter.</li>
  
    <li>sfMitchell is often considered as one of the best filters for enlarging images; generally not as sharp as Lanczos.</li>

  </ul>

  <p class="Body">In some functions filters above <strong>sfLinear</strong> may not be applicable (for example in Transform), in this case the filter value will be substituted with <b>sfLinear</b>.</p>

  <p class="Body">&nbsp;</p>


  <h2 id="Auto-SeeAlso">See Also</h2>
  <p class="Body"><a href="../Classes/TCustomBitmap32/Properties/StretchFilter.htm">TCustomBitmap32.StretchFilter</a>, <a href="../../GR32_Resamplers/Routines/StretchTransfer.htm">StretchTransfer</a></p>
    
  <p class="Copyright" id="auto"> <br><br> Copyright &copy;2000-2016 Alex Denisov and the Graphics32 Team &nbsp; - &nbsp; Graphics32 HEAD &nbsp; - &nbsp; Built on 11-November-2019 <br><br> </p>
  
</body>

</html>