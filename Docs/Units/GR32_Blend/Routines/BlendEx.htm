<html>

<head>
  <link rel="STYLESHEET" href="../../../../Styles/Default.css">

  <title>BlendEx</title><script type="text/javascript" src="../../../../CodeScripts/SyntaxHighlighter/scripts/shCore.js"></script><script type="text/javascript" src="../../../../CodeScripts/SyntaxHighlighter/scripts/shBrushDelphi.js"></script><script type="text/javascript" src="../../../../CodeScripts/SyntaxHighlighter/scripts/shBrushCpp.js"></script><script type="text/javascript" src="../../../../CodeScripts/SyntaxHighlighter/scripts/shBrushCSharp.js"></script><link rel="stylesheet" type="text/css" href="../../../../Styles/default.css"/><link rel="stylesheet" type="text/css" href="../../../../Menu/menu.css"/><link rel="stylesheet" type="text/css" href="../../../../CodeScripts/SyntaxHighlighter/styles/shCoreDefault.css"/><link rel="stylesheet" type="text/css" href="../../../../CodeScripts/SyntaxHighlighter/styles/shThemeDefault.css"/><meta name="viewport" content="width=device-width, initial-scale=1.0"><script type="text/javascript" src="../../../../Menu/menu.js"></script><script type="text/javascript" src="../../../../CodeScripts/bootstrap.js"></script>
</head>
<body bgcolor="#FFFFFF">
  <div class="menu" id="menu"><a class="ancestor" href="../../../_Body.htm">Index</a><a class="ancestor" href="../_Body.htm">GR32_Blend</a><span class="active">BlendEx</span>
  </div><br><br>

  <h1>BlendEx</h1>

  <p class="Decl"><b><a name="BlendRegEx">function</b> BlendRegEx(F, B, M: <a href="../../GR32/Types/Color%20Types.htm#TColor32">TColor32</a>): <a href="../../GR32/Types/Color%20Types.htm#TColor32">TColor32</a>; </p>

  <p class="Decl"><b><a name="BlendMemEx">procedure</b> BlendMemEx(F: <a href="../../GR32/Types/Color%20Types.htm#TColor32">TColor32</a>; var B: <a href="../../GR32/Types/Color%20Types.htm#TColor32">TColor32</a>; M: <a href="../../GR32/Types/Color%20Types.htm#TColor32">TColor32</a>); </p>

  <h2>Description</h2>

  <p class="Body">Mixes a foreground color with the background color using alpha of the foreground color scaled by the master alpha value <b>M</b>. </p>

  <p class="Code">S<span class="sub">ARGB</span> = (M * F<span class="sub">A</span>) * F<span class="sub">ARGB</span> + (1 – (M * F<span class="sub">A</span>)) * B<span class="sub">ARGB</span>; </p>

  <p class="Body"><b>M</b> is defined as <a href="../../GR32/Types/Color%20Types.htm#TColor32">TColor32</a> to avoid unnecessary type conversions, it must store only values in [0..255] range, the function does not perform range checking and the result in case <b>M</b> > 255 is not specified.</p>

  <p class="Body"><span class="EmptyRef">BlendRegEx</span> takes parameters and produces the result operating on CPU registers.</p>

  <p class="Body"><span class="EmptyRef">BlendMemEx</span> operates with the background color referenced by a memory address. </p>

  <p class="Body">Using <span class="EmptyRef">BlendMemEx</span> is more efficient when blending/combining data to a bitmap since it excludes writing operation for transparent pixels and reading operation for opaque ones.</p>

  <p class="Body">Note, that after using <span class="EmptyRef">BlendEx</span> functions, you have to call <a href="../../GR32_Blend/Routines/EMMS.htm">EMMS</a>. Otherwise CPU will be unable to handle floating point instructions.</p>


  <h2 id="Auto-SeeAlso">See Also</h2>
  <p class="Body"><a href="../../GR32/Types/Color Types.htm">Color Types</a>, <a href="Blend.htm">Blend</a>, <a href="Combine.htm">Combine</a>, <a href="EMMS.htm">EMMS</a>, <a href="Merge.htm">Merge</a>, <a href="MergeEx.htm">MergeEx</a></p>
  <p class="Copyright" id="auto"> <br><br> Copyright &copy;2000-2024 Alex Denisov and the Graphics32 Team &nbsp; - &nbsp; Graphics32 2.0 &nbsp; - &nbsp; Help file built on 18 Feb 2024 <br><br> </p>

</body>

</html>