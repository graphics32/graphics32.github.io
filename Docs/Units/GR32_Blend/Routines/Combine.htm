<html>
<head>
  <title>Combine</title><script type="text/javascript" src="../../../../CodeScripts/SyntaxHighlighter/scripts/shCore.js"></script><script type="text/javascript" src="../../../../CodeScripts/SyntaxHighlighter/scripts/shBrushDelphi.js"></script><script type="text/javascript" src="../../../../CodeScripts/SyntaxHighlighter/scripts/shBrushCpp.js"></script><script type="text/javascript" src="../../../../CodeScripts/SyntaxHighlighter/scripts/shBrushCSharp.js"></script><link rel="stylesheet" type="text/css" href="../../../../Styles/default.css"/><link rel="stylesheet" type="text/css" href="../../../../Menu/menu.css"/><link rel="stylesheet" type="text/css" href="../../../../CodeScripts/SyntaxHighlighter/styles/shCoreDefault.css"/><link rel="stylesheet" type="text/css" href="../../../../CodeScripts/SyntaxHighlighter/styles/shThemeDefault.css"/><meta name="viewport" content="width=device-width, initial-scale=1.0"><script type="text/javascript" src="../../../../Menu/menu.js"></script><script type="text/javascript" src="../../../../CodeScripts/bootstrap.js"></script>
</head>
<body bgcolor="#FFFFFF">
  <div class="menu" id="menu"><a class="ancestor" href="../../../_Body.htm">Index</a><a class="ancestor" href="../_Body.htm">GR32_Blend</a><span class="active">Combine</span>
  </div><br><br>

  <h1>Combine</h1>
  <p class="Decl"><b>function</b> CombineReg(X, Y, W: <a href="../../GR32/Types/Color%20Types.htm#TColor32">TColor32</a>): <a href="../../GR32/Types/Color%20Types.htm#TColor32">TColor32</a>;</p>
  <p class="Decl"> <b>procedure</b> CombineMem(F: <a href="../../GR32/Types/Color%20Types.htm#TColor32">TColor32</a>; var B: <a href="../../GR32/Types/Color%20Types.htm#TColor32">TColor32</a>; W: <a href="../../GR32/Types/Color%20Types.htm#TColor32">TColor32</a>);</p>
  <h2>Description</h2>
  <p class="Body">Returns the color with components calculated as linear interpolation between <b>X</b> and <b>Y</b> colors. The <b>W</b> parameter, which sholuld be in [0..255] range, specifies the weight of the first color (<b>X</b>). The alpha channel is interpolated as well.</p>
  <p class="Body"> S<span class="sub">RGBA</span> = W * X<span class="sub">RGBA</span> + (1 – W) * Y<span class="sub">RGBA</span>;</p>
  <p class="Body"><span class="EmptyRef">CombineReg</span> takes parameters and produces the result operating on CPU registers.</p>
  <p class="Body"><span class="EmptyRef">CombineMem</span> operates with the background color referenced by a memory address. </p>
  <p class="Body">Using <span class="EmptyRef">CombineMem</span> is more efficient when blending/combining data to a bitmap since it excludes writing operation for transparent pixels and reading operation for opaque ones.</p>
  <p class="Body">Note, that after using <span class="EmptyRef">Combine</span> functions, you have to call <a href="EMMS.htm">EMMS</a>. Otherwise CPU will be unable to handle floating point instructions.</p>
  <h2 id="Auto-SeeAlso">See Also</h2>
  <p class="Body"><a href="../../GR32/Types/Color Types.htm">Color Types</a>, <a href="Blend.htm">Blend</a>, <a href="BlendEx.htm">BlendEx</a>, <a href="EMMS.htm">EMMS</a></p>
  <p class="Copyright" id="auto"> <br><br> Copyright &copy;2000-2024 Alex Denisov and the Graphics32 Team &nbsp; - &nbsp; Graphics32 2.0 &nbsp; - &nbsp; Help file built on 18 Feb 2024 <br><br> </p>

</body>
</html>