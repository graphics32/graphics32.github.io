<html>

<head>
    
  <script type="text/javascript" src="../../../../../../Scripts/SyntaxHighlighter/scripts/shCore.js">
  </script>
    
  <script type="text/javascript" src="../../../../../../Scripts/SyntaxHighlighter/scripts/shBrushDelphi.js">
  </script>
    
  <link type="text/css" rel="stylesheet" href="../../../../../../Scripts/SyntaxHighlighter/styles/shCore.css">
    
  <link type="text/css" rel="stylesheet" href="../../../../../../Scripts/SyntaxHighlighter/styles/shThemeDefault.css">
  

  <title>Outline</title>

  <link rel="stylesheet" href="../../../../../../Styles/Default.css" type="text/css">

    
  <script type="text/javascript" src="../../../../../../Scripts/bootstrap.js">
  </script>
  
</head>


<body bgcolor="#FFFFFF">
    
  <!-- THIS FILE HAS BEEN AUTOMATICALLY PROCESSED FROM A SOURCE COPY -->
    
  <!-- DO NOT EDIT MANUALLY !!! -->
  
  <table class="Banner" cellspacing="0" cellpadding="0" border="1" bordercolorlight="#303080" bordercolordark="#7070B0">
    <tr>
      <td class="Banner" nowrap=""><a href="../../../../../_Body.htm" class="Banner"><img src="../../../../../../Images/_Home.gif" align="absmiddle">Home</a>
      </td>
      <td class="Banner" nowrap=""><a href="../../../_Body.htm" class="Banner"><img src="../../../../../../Images/_Unit.gif" align="absmiddle">GR32_Polygons</a>
      </td>
      <td class="Banner" nowrap=""><a href="../_Body.htm" class="Banner"><img src="../../../../../../Images/_Class.gif" align="absmiddle">TPolygon32</a>
      </td>
      <td class="Banner" width="100%" align="right"><img src="../../../../../../Images/_Project_Logo.gif" align="absmiddle">
      </td>
    </tr>
  </table>
  <h1>TPolygon32.Outline</h1>

  <p class="Decl"><b>function</b> Outline: <a href="../_Body.htm">TPolygon32</a>;</p>

  <h2>Description</h2>

  <p class="Body">This functions takes each contour (polyline) and constructs a new <a href="../_Body.htm">TPolygon32</a> object by outlining each contour. </p>

  <p class="Body">The operation is similar to using morphological edge detection filter for bitmaps, but it operates over polygon vertices. </p>

  <p class="Body">When outlining a closed polygon, this function actually returns two contours for each initial closed contour. In case of polylines (<a href="../Properties/Closed.htm">Closed</a> property is <i>False</i>), it returns a single contour (see image below). </p>

  <p class="Body">Note, this technique produces good results only for antialiased polygons. </p>

  <p class="Body">This function is essential for thick line drawing, all you have to do, is to take an original polygon, build its outline and grow it to get the desired thickness:</p>

  <p class="Body"><b>var</b> <br> &nbsp;&nbsp;P, Outline: TPolygon32; <br> <b>begin</b> <br> &nbsp;&nbsp;Outline := P.Outline; <span class="Comment">// create an outline </span><br> &nbsp;&nbsp;Outline.Grow(Fixed(1), 1); <span class="Comment">// make it 2-pixel wide outline (it grows in both directions)</span><br> &nbsp;&nbsp;Outline.DrawFill(DstBitmap, clBlack32); <br> <b>end</b>;</p>

  <p class="Body"><img src="../../../../../../Images/img_004.png" width="517" height="213"></p>


  <h2 id="Auto-SeeAlso">See Also</h2>
  <p class="Body"><a href="../_Body.htm">TPolygon32</a>, <a href="../Properties/Closed.htm">Closed</a></p>
    
  <p class="Copyright" id="auto"> <br><br> Copyright &copy;2000-2016 Alex Denisov and the Graphics32 Team &nbsp; - &nbsp; Graphics32 HEAD &nbsp; - &nbsp; Built on 11-November-2019 <br><br> </p>
  
</body>

</html>