<html>
<head>
  <title>TPixelAccessMode</title><script type="text/javascript" src="../../../../CodeScripts/SyntaxHighlighter/scripts/shCore.js"></script><script type="text/javascript" src="../../../../CodeScripts/SyntaxHighlighter/scripts/shBrushDelphi.js"></script><script type="text/javascript" src="../../../../CodeScripts/SyntaxHighlighter/scripts/shBrushCpp.js"></script><script type="text/javascript" src="../../../../CodeScripts/SyntaxHighlighter/scripts/shBrushCSharp.js"></script><link rel="stylesheet" type="text/css" href="../../../../Styles/default.css"/><link rel="stylesheet" type="text/css" href="../../../../Menu/menu.css"/><link rel="stylesheet" type="text/css" href="../../../../CodeScripts/SyntaxHighlighter/styles/shCoreDefault.css"/><link rel="stylesheet" type="text/css" href="../../../../CodeScripts/SyntaxHighlighter/styles/shThemeDefault.css"/><meta name="viewport" content="width=device-width, initial-scale=1.0"><script type="text/javascript" src="../../../../Menu/menu.js"></script><script type="text/javascript" src="../../../../CodeScripts/bootstrap.js"></script>
</head>
<body bgcolor="#FFFFFF">
  <div class="menu" id="menu"><a class="ancestor" href="../../../_Body.htm">Index</a><a class="ancestor" href="../_Body.htm">GR32_Resamplers</a><span class="active">TPixelAccessMode</span>
  </div><br><br>

  <h1>TPixelAccessMode</h1>
  <p class="Decl"><b>type </b>TPixelAccessMode = (pamUnsafe, pamSafe, pamWrap);</p>
  <h2>Description</h2>
  <p class="Body"><span class="EmptyRef">TPixelAccessMode</span> determines how <a href="../Classes/TKernelResampler/_Body.htm">TKernelResampler</a> handles pixels outside the bitmap boundary when invoking the <a href="../Classes/TKernelResampler/Methods/GetSample.htm">GetSample</a> method. </p>
  <ul>
    <li><strong>pamUnsafe</strong> - No boundary checks are performed. This means that we will read from memory outside the bitmap, if coordinates outside the bitmap area are passed.</li>
    <li><strong>pamSafe</strong> - If the coordinate is outside the clipping rectangle of the bitmap, then the bitmap's outer color will be returned.</li>
    <li><strong>pamWrap</strong> - Coordinates will be wrapped using the current <a href="../../GR32/Classes/TCustomBitmap32/Properties/WrapMode.htm">WrapMode</a> and will be restricted to the clipping rectangle. </li>
    <li><strong>pamTransparentEdge</strong> - If the coordinate is outside the clipping rectangle of the bitmap, then a transparent result is returned. Moreover edges are resampled as if there were transparent outer edges. This can be used to achieve antialiased edges when transforming bitmaps with opaque edges; The functionality is similar to <a href="../../GR32_Transforms/Routines/SetBorderTransparent.htm">SetBorderTransparent</a>.</li>
  </ul>
  <h2 id="Auto-SeeAlso">See Also</h2>
  <p class="Body"><a href="../../GR32/Classes/TCustomBitmap32/Properties/WrapMode.htm">TCustomBitmap32.WrapMode</a>, <a href="../Classes/TKernelResampler/_Body.htm">TKernelResampler</a>, <a href="../Classes/TKernelResampler/Methods/GetSample.htm">TKernelResampler.GetSample</a>, <a href="../../GR32_Transforms/Routines/SetBorderTransparent.htm">SetBorderTransparent</a></p>
  <p class="Copyright" id="auto"> <br><br> Copyright &copy;2000-2024 Alex Denisov and the Graphics32 Team &nbsp; - &nbsp; Graphics32 2.0 &nbsp; - &nbsp; Help file built on 18 Feb 2024 <br><br> </p>

</body>
</html>